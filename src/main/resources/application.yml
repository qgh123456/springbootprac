spring:
  datasource:
    username: root
    password: root
    url: jdbc:mysql://127.0.0.1:3306/test
    driver-class-name: com.mysql.jdbc.Driver
    name: optocon
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      filters: stat,wall,logback
    initialSize: 5
    minIdle: 5
    maxActive: 10
    maxWait: 60000     #获取连接时最大等待时间，单位毫秒
    timeBetweenEvictionRunsMillis: 1800000     #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    filters: stat,wall,slf4j    #通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter: slf4j，防御sql注入的filter:wall
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=90;druid.stat.logSlowSql=true   # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    validationQuery: select 'x'   #用来检测连接是否有效的sql，要求是一个查询语句
    testWhileIdle: true       #建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testOnBorrow: false       #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false       # ，做了这个配置会降低性能
    poolPreparedStatements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭

server:
  port: 8647

# Redis 配置
# Redis数据库索引（默认为0）
#spring.redis.database=0
# Redis服务器地址
#spring.redis.host=192.168.0.24
# Redis服务器连接端口
#spring.redis.port=6379
# Redis服务器连接密码（默认为空）
#spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=1000
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    pool:
      max-active: 200
      max-wait: -1
      max-idle: 10
      min-idle: 0
    timeout: 1000


mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*-mapper.xml

logging:
  level:
    com.atqgh.springboot.mapper: DEBUG #这个地方是显示sql日志的

user:
  name1: xiaoming1
  age: 18
  sex: man11
